<?php defined( 'ABSPATH' ) || exit;

/**
 * Shortcode to display the current user's avatar with configurable options.
 *
 * @since 1.0.0
 *
 * @param array $atts {
 *     Optional. Array of attributes to control the output.
 *
 *     @type int    'type'              Type of display: 0 for avatar only, 1 for avatar with name and user ID, 2 for avatar with name, user ID, and profile link. Default 0.
 *     @type string 'check_page_author' Whether to determine the user ID based on the type of page being viewed. Expected 'true' or 'false'. Default 'false'.
 *     @type string 'classes'           Additional CSS classes to apply to the outer container. Default empty.
 * }
 * @return string The HTML content generated by the avatar template based on the specified attributes.
 */
add_shortcode('csfpp_avatar', function($atts) {
    $args = shortcode_atts(array(
        'type' => 0,
        'check_page_author' => 'false',
        'classes' => ''
    ), $atts, 'csfpp_avatar');

    $atts = array(
        'type' => in_array($sanitized_type = intval($args['type']), array(0, 1, 2), true) ? $sanitized_type : 0,
        'check_page_author' => filter_var($args['check_page_author'], FILTER_VALIDATE_BOOLEAN),
        'classes' => implode(' ', array_map('sanitize_html_class', explode(' ', $args['classes']))),
        'user_id' => get_current_user_id()
    );

    $atts['owner_id'] = csfpp_get_page_author_id($atts['check_page_author']);
    $atts['user_name'] = csfpp_get_name($atts['owner_id']);

    ob_start();

    if ($atts['type'] === 0) {
        csfpp_load_avatar_template($atts);
    } else {
        csfpp_load_avatar_with_content_template($atts);
    }

    return ob_get_clean();
});